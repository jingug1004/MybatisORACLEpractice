<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- Root Context: defines shared resources visible to all other web components -->

    <context:component-scan base-package="com.sd.service"></context:component-scan>
    <context:component-scan base-package="com.sd.persistence"></context:component-scan>

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
        <property name="url" value="jdbc:oracle:thin:@218.55.15.117:1521:XE"/>
        <property name="username" value="seedtec"/>
        <property name="password" value="seed5751"/>
    </bean>

    <!-- SqlSession -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource"
                  ref="dataSource"/> <!-- MyBatis 설정 파일의 위치를 지정합니다. -->
        <property name="configLocation"
                  value="classpath:mybatis-config.xml"/> <!-- SQL 파일의 위치를 지정합니다. -->
        <property name="mapperLocations"
                  value="classpath:/mappers/**/*Mapper.xml"/>
    </bean>

    <!-- SqlSession -->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" destroy-method="clearCache">
        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean> <!-- 지정된 베이스 패키지에서 DAO(Mapper) 를 검색하여 등록합니다.
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"> <property name="basePackage" value="com.tistory.pentode.service.dao" />
    </bean> -->

    <!-- 트랜잭션 매니저 bean 을 등록합니다. -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean> <!-- 아노테이션 기반의 트랜잭션을 사용합니다. -->

    <tx:annotation-driven transaction-manager="transactionManager"/>

</beans>
